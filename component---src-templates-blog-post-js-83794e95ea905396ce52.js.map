{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/components/seo.js","webpack:///./src/components/Bio.js","webpack:///./src/components/Layout.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","frontmatter","description","excerpt","datetime","date","formattedDate","dangerouslySetInnerHTML","__html","html","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","rel","React","Component","pageQuery","SEO","_ref","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","bioQuery","Bio","react_default","gatsby_browser_entry","className","_4027657132","Layout","header","_this$props","children","__PATH_PREFIX__","pathname","Fragment","components_Bio","Date","getFullYear"],"mappings":"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","file":"component---src-templates-blog-post-js-83794e95ea905396ce52.js","sourcesContent":["import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\n\r\nimport Layout from '../components/Layout'\r\nimport SEO from '../components/seo'\r\n\r\nimport \"./index.css\";\r\n\r\nclass BlogPostTemplate extends React.Component {\r\n  render() {\r\n    const post = this.props.data.markdownRemark\r\n    const siteTitle = this.props.data.site.siteMetadata.title\r\n    const { previous, next } = this.props.pageContext\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\r\n        <h1>{post.frontmatter.title}</h1>\r\n\r\n        <time datetime={post.frontmatter.date}>{post.frontmatter.formattedDate}</time>\r\n\r\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n\r\n        <hr/>\r\n\r\n        <ul>\r\n          {previous && (\r\n            <li>\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            </li>\r\n          )}\r\n          {next && (\r\n            <li>\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date\r\n        formattedDate: date(formatString: \"MMMM DD, YYYY\")\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.description}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport Image from 'gatsby-image'\r\n\r\nfunction Bio() {\r\n  return (\r\n    <StaticQuery\r\n      query={bioQuery}\r\n      render={data => {\r\n        const { author } = data.site.siteMetadata\r\n        return (\r\n          <small className=\"inline-block\">\r\n            Written by <strong>{author}</strong> who lives and works in London building digital stuff.\r\n          </small>\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst bioQuery = graphql`\r\n  query BioQuery {\r\n    site {\r\n      siteMetadata {\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Bio\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport Bio from '../components/Bio'\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n    const { location, title, children } = this.props\r\n    const rootPath = `${__PATH_PREFIX__}/`\r\n    let header\r\n\r\n    if (location.pathname === rootPath) {\r\n      header = (\r\n        <h1 className=\"logo\">\r\n          <Link\r\n            className=\"no-underline\"\r\n            to={`/`}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </h1>\r\n      )\r\n    } else {\r\n      header = (\r\n        <h3 className=\"logo\">\r\n          <Link\r\n            className=\"no-underline\"\r\n            to={`/`}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </h3>\r\n      )\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <header className=\"header\">\r\n          {header}\r\n          <Link className=\"no-underline sans-serif\" to={`/`}>All posts</Link>\r\n        </header>\r\n        {children}\r\n        <Bio />\r\n        <footer>\r\n          <small>© {new Date().getFullYear()} - Built with ❤</small>\r\n        </footer>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}