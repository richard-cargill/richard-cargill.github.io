{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/seo.js","webpack:///./src/components/Bio.js","webpack:///./src/components/Layout.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","SEO","_ref","description","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","bioQuery","Bio","react_default","gatsby_browser_entry","className","_4027657132","Layout","header","_this$props","children","pathname","to","Fragment","components_Bio","Date","getFullYear"],"mappings":"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","file":"component---src-pages-404-js-dc36d6a5985d10a1b42f.js","sourcesContent":["import React from 'react'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport Layout from '../components/Layout'\r\nimport SEO from '../components/seo'\r\n\r\nclass NotFoundPage extends React.Component {\r\n  render() {\r\n    const { data } = this.props\r\n    const siteTitle = data.site.siteMetadata.title\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO title=\"404: Not Found\" />\r\n        <h1>Not Found</h1>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NotFoundPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.description}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport Image from 'gatsby-image'\r\n\r\nfunction Bio() {\r\n  return (\r\n    <StaticQuery\r\n      query={bioQuery}\r\n      render={data => {\r\n        const { author } = data.site.siteMetadata\r\n        return (\r\n          <small className=\"inline-block\">\r\n            Written by <strong>{author}</strong> who lives and works in London building digital stuff.\r\n          </small>\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst bioQuery = graphql`\r\n  query BioQuery {\r\n    site {\r\n      siteMetadata {\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Bio\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport Bio from '../components/Bio'\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n    const { location, title, children } = this.props\r\n    const rootPath = `${__PATH_PREFIX__}/`\r\n    let header\r\n\r\n    if (location.pathname === rootPath) {\r\n      header = (\r\n        <h1 className=\"logo\">\r\n          <Link\r\n            className=\"no-underline\"\r\n            to={`/`}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </h1>\r\n      )\r\n    } else {\r\n      header = (\r\n        <h3 className=\"logo\">\r\n          <Link\r\n            className=\"no-underline\"\r\n            to={`/`}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </h3>\r\n      )\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <header className=\"header\">\r\n          {header}\r\n          <Link className=\"no-underline sans-serif\" to={`/`}>All posts</Link>\r\n        </header>\r\n        {children}\r\n        <Bio />\r\n        <footer>\r\n          <small>© {new Date().getFullYear()} - Built with ❤</small>\r\n        </footer>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}